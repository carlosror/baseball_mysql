police_calls <- read_csv("police_calls.csv")
Sys.time() - start
police_calls$Incident_Location <- NULL
police_calls$Incident_Disposition <- NULL
police_calls$Incident_Disposition_Class <- NULL
for(year in c(2009:2015)) {
calls <- police_calls[substr(police_calls$Incident_Number, 1, 4) == as.character(year),]
calls$Incident_Number <- NULL
write_csv(as.data.frame(calls), cat("calls_", as.character(year), ".csv"), sep = "")
}
for(year in c(2009:2015)) {
calls <- police_calls[substr(police_calls$Incident_Number, 1, 4) == as.character(year),]
calls$Incident_Number <- NULL
write_csv(as.data.frame(calls), cat("calls_", as.character(year), ".csv", sep=""))
}
library(readr)
library(magrittr)
start <- Sys.time()
police_calls <- read_csv("police_calls.csv")
Sys.time() - start
police_calls$Incident_Location <- NULL
police_calls$Incident_Disposition <- NULL
police_calls$Incident_Disposition_Class <- NULL
for(year in c(2009:2015)) {
calls <- police_calls[substr(police_calls$Incident_Number, 1, 4) == as.character(year),]
calls$Incident_Number <- NULL
write_csv(as.data.frame(calls), cat("calls_", as.character(year), ".csv", sep=""))
}
for(year in c(2009:2015)) {
calls <- police_calls[substr(police_calls$Incident_Number, 1, 4) == as.character(year),]
calls$Incident_Number <- NULL
write_csv(as.data.frame(calls), cat("calls_", as.character(year), ".csv", sep=""))
}
year
cat("calls_", as.character(year), ".csv", sep="") %>% str()
cat("calls_", as.character(year), ".csv", sep="") %>% as.character()
cat("calls_", as.character(year), ".csv", sep="") %>% as.character()
?paste
for(year in c(2009:2015)) {
calls <- police_calls[substr(police_calls$Incident_Number, 1, 4) == as.character(year),]
calls$Incident_Number <- NULL
write_csv(as.data.frame(calls), paste("calls_", as.character(year), ".csv", sep=""))
}
start <- Sys.time()
calls_2010 <- read_csv("calls_2010.csv")
Sys.time() - start
library(shiny)
library(chron) # for dealing with chronological objects
library(magrittr) # pipe operator
library(plyr) # rename
library(readr)# read_csv(), ~3x faster than read.csv()
start <- Sys.time()
chicago_crimes <- read_csv("Crimes_-_2001_to_present.csv")
Sys.time() - start
str(chicago_crimes)
chicago_crimes$Beat <- NULL
chicago_crimes$District <- NULL
chicago_crimes$Ward <- NULL
chicago_crimes$IUCR <- NULL
chicago_crimes$`Community Area` <- NULL
chicago_crimes$`FBI Code` <- NULL
chicago_crimes$`X Coordinate` <- NULL
chicago_crimes$`Y Coordinate` <- NULL
chicago_crimes$`Updated On` <- NULL
#Rename a few columns with shorter names and so that they match names
#I had used before.
chicago_crimes <- rename(chicago_crimes, replace = c("Primary Types" = "categories"))
chicago_crimes <- rename(chicago_crimes, replace = c("DESCRIPTION" = "description"))
chicago_crimes <- rename(chicago_crimes, replace = c("Primary Type" = "categories"))
chicago_crimes <- rename(chicago_crimes, replace = c("Description" = "description"))
str(chicago_crimes)
chicago_crimes[is.na(chicago_crimes$Latitude),] %>% dim()
chicago_crimes[is.na(chicago_crimes$Longitude),] %>% dim()
str(chicago_crimes$Date)
chicago_crimes[is.na(chicago_crimes$Date),] %>% dim()
start <- Sys.time()
#Get the dates of incidents
chicago_crimes_dates <- substr(chicago_crimes$date, 1, 10) %>% dates() %>% as.Date("%m/%d/%y")
#Create new column consisting of days of week incidents took place
chicago_crimes$days <- weekdays(chicago_crimes_dates) # vector of "Wednesday" , "Saturday", ...
chicago_crimes[is.na(chicago_crimes$Year),] %>% dim()
chicago_crimes[is.na(chicago_crimes$Location),] %>% dim()
library(chron) # for dealing with chronological objects
library(magrittr) # pipe operator
library(plyr) # rename
library(readr)# read_csv(), ~3x faster than read.csv()
start <- Sys.time()
chicago_crimes <- read_csv("Crimes_-_2001_to_present.csv")
Sys.time() - start
chicago_crimes$Beat <- NULL
chicago_crimes$District <- NULL
chicago_crimes$Ward <- NULL
chicago_crimes$IUCR <- NULL
chicago_crimes$`Community Area` <- NULL
chicago_crimes$`FBI Code` <- NULL
chicago_crimes$`X Coordinate` <- NULL
chicago_crimes$`Y Coordinate` <- NULL
chicago_crimes$`Updated On` <- NULL
chicago_crimes$Location <- NULL
chicago_crimes$Domestic <- NULL
chicago_crimes$`Location Description` <- NULL
#Rename a few columns with shorter names so that they match names
#I had used before.
chicago_crimes <- rename(chicago_crimes, replace = c("Primary Type" = "categories"))
chicago_crimes <- rename(chicago_crimes, replace = c("Description" = "description"))
chicago_crimes <- rename(chicago_crimes, replace = c("Case Number" = "case_number"))
chicago_crimes <- rename(chicago_crimes, replace = c("Location Description" = "location_description"))
chicago_crimes <- rename(chicago_crimes, replace = c("Year" = "year"))
chicago_crimes <- rename(chicago_crimes, replace = c("Latitude" = "latitude"))
chicago_crimes <- rename(chicago_crimes, replace = c("Longitude" = "longitude"))
chicago_crimes <- rename(chicago_crimes, replace = c("Block" = "address"))
start <- Sys.time()
#Get the dates of incidents
chicago_crimes_dates <- substr(chicago_crimes$date, 1, 10) %>% dates() %>% as.Date("%m/%d/%y")
#Create new column consisting of days of week incidents took place
chicago_crimes$days <- weekdays(chicago_crimes_dates) # vector of "Wednesday" , "Saturday", ...
str(chicago_crimes_dates)
chicago_crimes <- rename(chicago_crimes, replace = c("Date" = "date"))
start <- Sys.time()
#Get the dates of incidents
chicago_crimes_dates <- substr(chicago_crimes$date, 1, 10) %>% dates() %>% as.Date("%m/%d/%y")
#Create new column consisting of days of week incidents took place
chicago_crimes$days <- weekdays(chicago_crimes_dates) # vector of "Wednesday" , "Saturday", ...
#Get the times, in 24-hour format, the incidents took place
#Using strptime() per this S.O. post:
#http://stackoverflow.com/questions/29833538/convert-12-hour-character-time-to-24-hour
chicago_crimes_times <- substr(chicago_crimes$date, 12,22) %>% strptime("%I:%M:%S %p") %>% format(format = "%H:%M:%S") %>% times()
#Create new column consisting of hour of day incidents took place
chicago_crimes_hours <- hours(chicago_crimes_times)
#Create a new column consisting of time period incidnts took place
# Determine periods as follows:
# Early Morning (before 6 AM): 0, Morning (between 6 AM and 12 PM): 1
# Afternoon (between noon and 6 PM): 2, Evening (between 6 PM and midnight): 3
hours_to_periods <- function(hour) {if (hour %/% 6 == 0) "early_morning" else if (hour %/% 6 == 1) "morning" else if (hour %/% 6 == 2) "afternoon" else "evening"}
chicago_crimes$periods <- sapply(chicago_crimes_hours, hours_to_periods)
Sys.time() - start
head(chicago_crimes_dates)
head(chicago_crimes_times)
head(chicago_crimes$date)
head(chicago_crimes_hours)
library(chron) # for dealing with chronological objects
library(magrittr) # pipe operator
library(plyr) # rename
library(readr)# read_csv(), ~3x faster than read.csv()
start <- Sys.time()
chicago_crimes <- read_csv("Crimes_-_2001_to_present.csv")
Sys.time() - start
chicago_crimes$Beat <- NULL
chicago_crimes$District <- NULL
chicago_crimes$Ward <- NULL
chicago_crimes$IUCR <- NULL
chicago_crimes$`Community Area` <- NULL
chicago_crimes$`FBI Code` <- NULL
chicago_crimes$`X Coordinate` <- NULL
chicago_crimes$`Y Coordinate` <- NULL
chicago_crimes$`Updated On` <- NULL
chicago_crimes$Location <- NULL
chicago_crimes$Domestic <- NULL
chicago_crimes$`Location Description` <- NULL
#Rename a few columns with shorter names so that they match names
#I had used before.
chicago_crimes <- rename(chicago_crimes, replace = c("Primary Type" = "categories"))
chicago_crimes <- rename(chicago_crimes, replace = c("Description" = "description"))
chicago_crimes <- rename(chicago_crimes, replace = c("Case Number" = "case_number"))
chicago_crimes <- rename(chicago_crimes, replace = c("Year" = "year"))
chicago_crimes <- rename(chicago_crimes, replace = c("Latitude" = "latitude"))
chicago_crimes <- rename(chicago_crimes, replace = c("Longitude" = "longitude"))
chicago_crimes <- rename(chicago_crimes, replace = c("Block" = "address"))
chicago_crimes <- rename(chicago_crimes, replace = c("Date" = "date"))
start <- Sys.time()
#Get the dates of incidents
chicago_crimes_dates <- substr(chicago_crimes$date, 1, 10) %>% dates() %>% as.Date("%m/%d/%y")
#Create new column consisting of days of week incidents took place
chicago_crimes$days <- weekdays(chicago_crimes_dates) # vector of "Wednesday" , "Saturday", ...
#Get the times, in 24-hour format, the incidents took place
#Using strptime() per this S.O. post:
#http://stackoverflow.com/questions/29833538/convert-12-hour-character-time-to-24-hour
chicago_crimes_times <- substr(chicago_crimes$date, 12,22) %>% strptime("%I:%M:%S %p") %>% format(format = "%H:%M:%S") %>% times()
#Create new column consisting of hour of day incidents took place
chicago_crimes_hours <- hours(chicago_crimes_times)
#Create a new column consisting of time period incidnts took place
# Determine periods as follows:
# Early Morning (before 6 AM): 0, Morning (between 6 AM and 12 PM): 1
# Afternoon (between noon and 6 PM): 2, Evening (between 6 PM and midnight): 3
hours_to_periods <- function(hour) {if (hour %/% 6 == 0) "early_morning" else if (hour %/% 6 == 1) "morning" else if (hour %/% 6 == 2) "afternoon" else "evening"}
chicago_crimes$periods <- sapply(chicago_crimes_hours, hours_to_periods)
Sys.time() - start
write_csv(chicago_crimes, "chicago_crimes.csv")
chicago_crimes$year %>% unique()
start <- Sys.time()
for(year in c(2001:2017)) {
crimes <- chicago_crimes[chicago_crimes$year == as.character(year),]
write_csv(as.data.frame(crimes), paste("crimes_", as.character(year), ".csv", sep=""))
}
Sys.time() - start
library(shiny)
?headerPanel
headerPanel("Hello Shiny!")
?titlePanel
seq_along(4)
seq(4)
?seq_along
?outer
outer(1:2,1:2, FUN = "*")
?vector()
2*1:10
c(TRUE, FALSE, NA)
str(outer(1:2,1:2, FUN = "*"))
paste(c("X", "Y"), 1:2, sep="")
x <- 1:9
x
x[-(1:3)]
x <- 1:2
y <- c(x,0,x)
y
prod(y)
?prod
x <- 0:6
y <- x[2 * 1:3]
y
length(y) <- 2
y
"  " <- 1
":)" <- 1
_abc <- 1
x <- 0:3
y <- as.character(x)
y
z <- as.integer(y)
z
x <- 1:2
y
y <- c(x,0,x)
z <- 2*x + y + 1
y <- c(4,5)
y
pmax(x,y)
?pmax
c(list(1), "1")
x <- c(-1,0,1,2,NA)
(x+1)[!is.na(x) & x>0]
x+1
num <- 5
res <- -1
for (i in 1:num) {if {i%2==0}{res <- res*1}}
for (i in 1:num) {if (i%2==0){res <- res*1}}
?lapply
x <- data.frame(foo = 1:4, bar = c(T,T,F,F))
ncol(x)
?transpose
x <- c("a", "b")
x
y <- as.factor(x)
y
as.numeric(as.character(y))
?function
?bwplot
?tsplit
?split
x <- 0:7
dim(x) <- c(2,2,2)
x[,2,]
?multiscale
?cmultiscale
?cmscale
?cmdscale
?data.matrix
?aggregate
?split
?factor
a <- array(0:7, dim=c(2,2,2))
b <- a%*a%
b <- a%*%a
b[1]
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
setwd("~/Computer_Programming/projects/projects_under_consideration/mysql")
setwd("~/Computer_Programming/projects/projects_under_consideration/mysql")
batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID=1980")
str(batting1980)
batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID=1980")
batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
summary(batting1980)
batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
summary(batting1980)
testquery <- dbGetQuery(db, "SELECT * FROM Batting WHERE teamID == "ML4"")
batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
summary(batting1980)
testquery <- dbGetQuery(db, "SELECT * FROM Batting WHERE teamID == 'ML4' ")
batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
summary(batting1980)
testquery <- dbGetQuery(db, "SELECT * FROM Batting WHERE teamID == ML4 ")
#batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
#summary(batting1980)
testquery <- dbGetQuery(db, "SELECT * FROM Batting WHERE teamID = ML4 ")
#batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
#summary(batting1980)
testquery <- dbGetQuery(db, "SELECT * FROM Batting WHERE teamID = 'ML4' ")
#batting1980 <- dbGetQuery(db, "SELECT * FROM Batting WHERE yearID>1949 AND yearID<2010")
#summary(batting1980)
testquery <- dbGetQuery(db, "SELECT * FROM Batting WHERE teamID = 'ML4' ")
summary(testquery)
library(RMySQL)
drv <- dbDriver("MySQL")
db <- dbConnect(drv, user="root", dbname = "lahman2016", host="127.0.0.1")
dbListTables(db)
batPref1980 <- dbGetQuery(db,"SELECT b1980.playerID, b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
summary(batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
summary(batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
summary(batPref1980)
boxplot(batPref1980, x = "bats")
boxplot(batPref1980[hr])
boxplot(batPref1980["hr"])
boxplot(batPref1980["bats"])
batPref1980$bats <- as.factor(batPref1980$bats)
boxplot(batPref1980["hr"])
batPref1980$bats <- as.factor(batPref1980$bats)
boxplot(batPref1980["bats"])
?boxplot
summary(batPref1980)
batPref1980$bats <- as.factor(batPref1980$bats)
boxplot(hr ~ bats, data = batPref1980)
batPref1980$bats <- as.factor(batPref1980$bats)
boxplot(log(hr) ~ bats, data = batPref1980)
batPref1980$bats <- as.factor(batPref1980$bats)
boxplot(hr ~ bats, data = batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
summary(batPref1980)
boxplot(hr ~ bats, data = batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980 AND G > 50
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
batPref1980$bats <- as.factor(batPref1980$bats)
summary(batPref1980)
boxplot(hr ~ bats, data = batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
batPref1980$bats <- as.factor(batPref1980$bats)
summary(batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980 AND G > 99
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
batPref1980$bats <- as.factor(batPref1980$bats)
summary(batPref1980)
boxplot(hr ~ bats, data = batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980 AND G > 99
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
batPref1980$bats <- as.factor(batPref1980$bats)
summary(batPref1980)
batPref1980 <- dbGetQuery(db,"SELECT b1980.hr_sum AS hr, MASTER.bats
FROM (SELECT playerID, sum(hr) as hr_sum
FROM Batting
WHERE yearID = 1980 AND G > 99
GROUP BY playerID) b1980
JOIN MASTER
ON b1980.playerID = MASTER.playerID")
batPref1980$bats <- as.factor(batPref1980$bats)
summary(batPref1980)
boxplot(hr ~ bats, data = batPref1980)
boxplot(hr ~ bats, data = batPref1980, xlab = "pref")
boxplot(hr ~ bats, data = batPref1980, xlab = "Batting preference", ylab = "Home Runs")
boxplot(hr ~ bats, data = batPref1980, xlab = "Batting preference", ylab = "Home runs")
boxplot(hr ~ bats, data = batPref1980, xlab = "Batting preference", ylab = "Home runs", title="xyz")
boxplot(hr ~ bats, data = batPref1980, xlab = "Batting preference", ylab = "Home runs", main="xyz")
boxplot(hr ~ bats, data = batPref1980, xlab = "Batting preference", ylab = "Home runs",
main="Home runs hit by batting preference")
boxplot(hr ~ bats, data = batPref1980, xlab = "Batting preference", ylab = "Home runs",
main="Home runs hit by batting preference in 1980")
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
summary(ToothGrowth)
boxplot(len~supp*dose, data=ToothGrowth, notch=TRUE,
col=(c("gold","darkgreen")),
main="Tooth Growth", xlab="Suppliment and Dose")
boxplot(len~supp, data=ToothGrowth, notch=TRUE,
col=(c("gold","darkgreen")),
main="Tooth Growth", xlab="Suppliment and Dose")
attendance_1980 <- dbGetQuery(db, "SELECT name AS team, attendance, lgID as league, divID AS division
FROM Teams WHERE yearID = 1980")
attendance_1980$league <- as.factor(attendance_1980$league)
attendance_1980$division <- as.factor(attendance_1980$division)
summary(attendance_1980)
attendance_1980 <- dbGetQuery(db, "SELECT name AS team, attendance, lgID as league, divID AS division
FROM Teams WHERE yearID = 1980")
attendance_1980$team <- as.factor(attendance_1980$team)
attendance_1980$league <- as.factor(attendance_1980$league)
attendance_1980$division <- as.factor(attendance_1980$division)
summary(attendance_1980)
boxplot(attendance~league, data = attendance_1980)
attendance_1980 <- dbGetQuery(db, "SELECT name AS team, attendance, lgID as league, divID AS division
FROM Teams WHERE yearID = 1980")
attendance_1980$team <- as.factor(attendance_1980$team)
attendance_1980$league <- as.factor(attendance_1980$league)
attendance_1980$division <- as.factor(attendance_1980$division)
summary(attendance_1980)
boxplot(attendance~league, data = attendance_1980)
boxplot(attendance ~ league, data = attendance_1980)
attendance_1980 <- dbGetQuery(db, "SELECT name AS team, attendance, lgID as league, divID AS division
FROM Teams WHERE yearID = 1980")
attendance_1980$attendance <- as.numeric(attendance_1980$attendance)
attendance_1980$team <- as.factor(attendance_1980$team)
attendance_1980$league <- as.factor(attendance_1980$league)
attendance_1980$division <- as.factor(attendance_1980$division)
summary(attendance_1980)
boxplot(attendance ~ league, data = attendance_1980)
boxplot(attendance ~ league*division, data = attendance_1980)
?legend
boxplot(attendance ~ league*division, data = attendance_1980)
legend(legend = c("East", "West"), fill = c("yellow", "orange"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "AL.E", legend = c("East", "West"), fill = c("yellow", "orange"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "top", legend = c("East", "West"), fill = c("yellow", "orange"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "topleft", legend = c("East", "West"), fill = c("yellow", "orange"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "topleft", legend = c("AL.E", "West"), fill = c("yellow", "orange"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "topleft", legend = c("AL.E", "AL.W"), fill = c("yellow", "orange"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "topleft", legend = c("AL.E", "AL.W", "NL.E", "NL.W"), fill = c("yellow", "orange", "red", "green"))
boxplot(attendance ~ league*division, data = attendance_1980)
legend(x = "topleft", legend = c("AL*E", "AL.W", "NL.E", "NL.W"), fill = c("yellow", "orange", "red", "green"))
boxplot(attendance/1e6 ~ league*division, data = attendance_1980)
#legend(x = "topleft", legend = c("AL*E", "AL.W", "NL.E", "NL.W"), fill = c("yellow", "orange", "red", "green"))
